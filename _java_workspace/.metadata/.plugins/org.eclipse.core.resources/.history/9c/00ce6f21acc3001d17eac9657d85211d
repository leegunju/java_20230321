package studentmanager2;

import java.util.Scanner;

public class StudentManager implements Program{
	
	//멤버변수 student class , stdCount 변수
	private Student[] std = new Student[5];
	private int stdCount;	//등록한 학생 카운트

	@Override
	public void printStudent() {
		System.out.println("----전체 학생 정보----");
		for(int i=0; i<stdCount; i++) {
			//std[i].stdPrint();	//학생정보만 출력
			printStudentOne(std[i]);	//학생정보+수강정보
			System.out.println("--------------");
		}
		
	}

	@Override
	public void insertStudent(Scanner scan) {
		// 1명의 학생정보 값을 입력받아 객체를 생성한 후 std 배열에 등록
		// 학번, 이름, 주민번호, 학부, 학과
		System.out.println("--학생정보 입력--");
		System.out.println("이름>");
		String name = scan.next();
		System.out.println("학번>");
		String sNum = scan.next();
		System.out.println("주민번호>");
		String rNum = scan.next();
		System.out.println("학부>");
		String faculy = scan.next();
		System.out.println("학과>");
		String major = scan.next();
		System.out.println("--------------");
		
		//입력받은 값으로 객체를 생성
		Student s = new Student(sNum, name, rNum, faculy, major);
		//배열이 다 찼다면 더 큰 배열을 생성 후 배열복사
		if(stdCount == std.length) {
			Student[] tmp = new Student[std.length+5];
			System.arraycopy(std, 0, tmp, 0, std.length);
			std = tmp;
		}
		
		//std 배열에 등록
		std[stdCount] = s;
		stdCount++;	//인원증가(배열 번지 증가)
	}

	@Override
	public void searchStudent(Scanner scan) {
		// 검색할 학생이름을 입력받아 배열에서 탐색 후 있다면
		// 학생정보+수강정보 출력 => printStudentOne() 호출
		System.out.println("학생이름을 입력하세요");
		String searchName = scan.next();
		int index = -1; //찾은 학생의 배열주소 입력
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(searchName)) {
				printStudentOne(std[i]);
				index=i;
			}
		}
		if(index == -1) {
			System.out.println("등록되지 않은 이름입니다.");			
		}
	}

	@Override
	public void registerStudent(Scanner scan) {
		// 수강신청을 하고자하는 학생의 이름/학번을 입력받기
		// 체크 그 학생의 배열에 위치 체크 신청
		// 학번이 없다면...
		// 신청할 과목의 객체 생성(과목정보 입력받기)
		// 신청메서드 호출 insertSubject(객체)
		int index = -1;
		System.out.println("----수강신청----");
		System.out.println("학생이름을 입력하세요");
		String stdName = scan.next();
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(stdName)) {
				index=i;
				break;
			}
		}
		if(index == -1) {
			System.out.println("학생이름이 없습니다.");			
		} else {
			System.out.println("--과목정보 입력--");
			System.out.println("과목번호>");
			String sNum = scan.next();
			System.out.println("과목명>");
			String sName = scan.next();
			System.out.println("학점>");
			double sPoint = scan.nextInt();
			Subject sb = new Subject(sNum, sName, sPoint);
			std[index].insertSubject(sb);
			System.out.println("--------------");
			
			
		}
		
	}

	@Override
	public void deleteStudent(Scanner scan) {
		int index = -1;
		System.out.println("----수강신청삭제----");
		System.out.println("학생이름을 입력하세요");
		String stdName = scan.next();
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(stdName)) {
				index=i;
				break;
			}
		}
		if(index == -1) {
			System.out.println("학생정보가 없습니다.");			
		} else {
			System.out.println("과목명>");
			String sName = scan.next();
			std[index].deleteSubject(sName);
			System.out.println("--------------");
			
			
		}
		
	}
	
	//1명의 학생정보+수강정보를 같이 출력하고 싶을 때
	public void printStudentOne(Student s) {
		System.out.println("--학생정보--");
		s.stdPrint();
		System.out.println("--수강정보--");
		s.subPrint();
	}

}
